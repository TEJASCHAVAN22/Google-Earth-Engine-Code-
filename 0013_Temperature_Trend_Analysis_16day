// Load the ROI from an asset
var roi = ee.FeatureCollection('projects/gee-trial2/assets/Shapfile/WMH_Distric');
Map.addLayer(roi, { color: 'red' }, 'ROI');
Map.centerObject(roi, 4.4);

// Load ERA5 Daily dataset and filter for temperature
var era = ee.ImageCollection("ECMWF/ERA5_LAND/DAILY")
                               .select('temperature_2m')
                               .filterDate('2015-01-01', '2023-12-31');

// Convert temperature from Kelvin to Celsius
var temp = era.map(function(img) {
  return img.subtract(273.15).set('system:time_start', img.get('system:time_start'));
});

// Function to aggregate daily data to 16-day intervals
var aggregateTo16Days = function(startDate, endDate) {
  return temp.filterDate(startDate, endDate).mean().set('system:time_start', ee.Date(startDate).millis());
};

// Create a list of start dates for 16-day intervals within the time range
var startDates = ee.List.sequence('2015-01-01', '2023-12-31', 16 * 24 * 3600 * 1000); // 16 days in milliseconds

// Aggregate the temperature data for each 16-day interval
var temp16Day = ee.ImageCollection(startDates.map(function(date) {
  var startDate = ee.Date(date);
  var endDate = startDate.advance(16, 'day');
  return aggregateTo16Days(startDate.format('YYYY-MM-dd'), endDate.format('YYYY-MM-dd'));
}));

// Visualize the mean temperature for a 16-day interval as a layer (mean of the entire period)
var meanTemp = temp16Day.mean();

var meanTempVis = {
  min: 15, // Adjust based on expected temperature range in Celsius
  max: 40, // Adjust based on expected temperature range in Celsius
  palette: ['blue', 'cyan', 'yellow', 'orange', 'red']
};

Map.addLayer(meanTemp.clip(roi), meanTempVis, 'Mean Temperature');

// Extract temperature values at the ROI for each 16-day interval
var tempDateVal = temp16Day.map(function(img) {
  var tempVal = img.reduceRegion({
    reducer: ee.Reducer.first(),
    geometry: roi,
    scale: 1000
  }).get('temperature_2m');
  
  var dateVal = ee.Date(img.get('system:time_start')).format('YYYY-MM-dd');
  return ee.Feature(null, { 'date': dateVal, 'temp': tempVal });
});

// Convert the results to a feature collection
var tempCollection = ee.FeatureCollection(tempDateVal);

// Create a chart to visualize the temperature trends
var chart = ui.Chart.feature.byFeature({
  features: tempCollection,
  xProperty: 'date',
  yProperties: ['temp']
}).setChartType('LineChart')
  .setOptions({
    title: 'Temperature Trend (°C) - 16-day Intervals',
    hAxis: { title: 'Date' },
    vAxis: { title: 'Temperature (°C)' },
    pointSize: 2,
    lineWidth: 1,
    series: { 0: { color: 'blue' } }
  });

// Print the chart to the console
print('Temperature Trend Chart', chart);

// Log the temperature values in the console for verification
print('Temperature Data Collection:', tempCollection);

