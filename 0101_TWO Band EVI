// Cloud Mask Function
var maskClouds = function(image) {
  var cloudProbability = image.select('MSK_CLDPRB'); // Select the cloud probability band
  return image.updateMask(cloudProbability.lt(10)); // Return image masking out cloudy areas (cloud probability < 50%)
};

var scale = (function(image) {
                    return image
                      .multiply(0.0001) // Scaling factor for Sentinel-2 SR
                      .copyProperties(image, ['system:time_start']);
                  });
//----------------------------------------------------------------------------------------------------

var coords = [[74.2, 18.6],
              [74.3, 18.6],
              [74.3, 18.5],
              [74.2, 18.5]];
    
var aoi = ee.FeatureCollection([
  ee.Feature(ee.Geometry.Polygon([coords], null, false), {
    "system:index": "0"
  })
]);
Map.centerObject(aoi, 12);

//-----------------------------------------------------------------------------
var startyear = 2019; 
var endyear = 2019;
var startmonth = 1; 
var endmonth = 12; 

// Compute beginning & end of study period + sequence of months & years
var start_date = ee.Date.fromYMD(startyear, startmonth, 1);
var end_date = ee.Date.fromYMD(endyear , endmonth, 30);
var years = ee.List.sequence(startyear, endyear);
var months = ee.List.sequence(startmonth,endmonth);

// Load the Santianal Dataset
var santianal = ee.ImageCollection("COPERNICUS/S2_SR_HARMONIZED")
                                    .filterBounds(aoi)
                                    .map(maskClouds)
                                    .map(scale)
                                    .filterDate(start_date, end_date);
//---------------------------------------------------------------------------------------//
// TWO Band EVI
//---------------------------------------------------------------------------------------//
var calculate2bandEVI = function (image) {
  var nir = image.select('B8'); // NIR band (840-880 nm)
  var red = image.select('B4'); // Red band (640-670 nm)

  // Use 'expression' to create a new image with the EVI calculation
  var Index = image.expression(
    '2.5 * (nir - red) / (nir + 2.4 * red + 1)', {
      'nir': nir,
      'red': red
    }).rename('Band_EVI');
  return Index;
};

var twobandevi = santianal.map(calculate2bandEVI);
Map.addLayer(twobandevi, {min: 0, max: 255}, 'TWO Band EVI');
